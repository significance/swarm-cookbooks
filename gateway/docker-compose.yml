version: "3.3"

services:

  traefik:
    image: "traefik:2.8"
    container_name: "traefik"
    command:
      # Traefik log level & dashboard (remove comments for debugging)
      # - "--log.level=DEBUG"
      # - --api.dashboard=true
      # Tell Traefik to discover containers using the Docker API
      - --providers.docker=true
      # Set up LetsEncrypt
      - --certificatesresolvers.gatewayresolver.acme.dnschallenge=true
      - --certificatesresolvers.gatewayresolver.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.gatewayresolver.acme.email=${LETSENCRYPT_EMAIL}
      - --certificatesresolvers.gatewayresolver.acme.storage=/letsencrypt/acme.json
      # Set up an insecure listener that redirects all traffic to TLS
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # Set up the TLS configuration for our websecure listener
      - --entrypoints.websecure.http.tls=true
      - --entrypoints.websecure.http.tls.certResolver=gatewayresolver
      - --entrypoints.websecure.http.tls.domains[0].main=${HOSTNAME}
      - --entrypoints.websecure.http.tls.domains[0].sans=*.${HOSTNAME}
    ports:
     - "443:443"
     - "80:80"
    volumes:
      - "certs:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
      - CLOUDFLARE_DNS_API_TOKEN=${CLOUDFLARE_DNS_API_TOKEN}


  gateway:
          image: ethersphere/gateway-proxy:0.5.0
          container_name: gateway-proxy
          environment:
                  - "BEE_API_URL=http://bee:1633"
                  # - "BEE_DEBUG_API_URL=bee:1635"
                  - "ENS_SUBDOMAINS=true"
                  - "CID_SUBDOMAINS=true"
                  - "HOSTNAME=${HOSTNAME}"
                  - "POSTAGE_STAMP=${POSTAGE_STAMP}"
                  - "REMOVE_PIN_HEADER=false"
          ports:
                  - "3000:3000"
          labels:
                  # configure Traefik routing and certs
                  - "traefik.enable=true"
                  - "traefik.http.routers.gateway.rule=HostRegexp(`${HOSTNAME}`,`{subdomain:.+}.${HOSTNAME}`)"
                  - "traefik.http.routers.gateway.entrypoints=websecure"
                  - "traefik.http.routers.gateway.tls.certresolver=gatewayresolver"
                  # configure Traefik handing of CORS headers
                  - "traefik.http.middlewares.gatewaycorsheader.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST"
                  - "traefik.http.middlewares.gatewaycorsheader.headers.accesscontrolallowheaders=*"
                  - "traefik.http.middlewares.gatewaycorsheader.headers.accesscontrolalloworiginlist=*"
                  - "traefik.http.middlewares.gatewaycorsheader.headers.accesscontrolmaxage=100"
                  - "traefik.http.middlewares.gatewaycorsheader.headers.addvaryheader=true"
                  - "traefik.http.middlewares.accesscontrolheader.headers.customresponseheaders.Access-Control-Allow-Origin=*"
                  # automatically pin chunks created by this gateway for later stewardship
                  - "traefik.http.middlewares.gatewaypinheader.headers.customrequestheaders.Swarm-Pin=true"
                  # add middlewares to router
                  - "traefik.http.routers.gateway.middlewares=gatewaycorsheader,accesscontrolheader,gatewaypinheader"

  bee:
    image: ethersphere/bee:1.6.1
    container_name: bee
    restart: unless-stopped
    volumes:
      - bee:/home/bee/.bee
    command: start
    environment:
            - "BEE_API_ADDR=:1633"
            - "BEE_P2P_ADDR=:1634"
            - "BEE_CORS_ALLOWED_ORIGINS=['*']"
            - "BEE_DEBUG_API_ADDR=:1635"
            - "BEE_DEBUG_API_ENABLE=true"
            - "BEE_NAT_ADDR=${PUBLIC_IP}:1634"
            - "BEE_RESOLVER_OPTIONS=${ETH_RPC}"
            - "BEE_SWAP_ENDPOINT=${GC_RPC}"
            - "BEE_SWAP_INITIAL_DEPOSIT=0"
            - "BEE_VERBOSITY=debug"
            - "BEE_PASSWORD=${BEE_PASSWORD}"
            - "BEE_USE_POSTAGE_SNAPSHOT=true"
    ports:
       - "127.0.0.1:1633:1633"
       - "1634:1634"
       - "127.0.0.1:1635:1635"

volumes:
  bee:
  certs:
